name: Manual release

on:
  workflow_dispatch:
    branches: [ master ]

jobs:
  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set version code to release
        run: |
          echo "$(grep 'version=' gradle.properties | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" |\
          xargs -I % sed -i 's/^version=.*$/version=%/' gradle.properties
      - name: Create version and tag
        id: tag_version
        run: |
          echo "::set-output name=new_tag::v$(grep 'version=' gradle.properties | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" &&
          echo "::set-output name=new_version::$(grep 'version=' gradle.properties | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
      - name: Setup signing information
        env:
          KEY_FILE: ${{ secrets.signingKeyBase64 }}
        run: echo "$KEY_FILE" | openssl base64 -d > signingKey.jks
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build apk
        env:
          KEY_STORE_PWD: ${{ secrets.keyStorePassword }}
          KEY_ALIAS: ${{ secrets.alias }}
          KEY_PWD: ${{ secrets.keyPassword }}
        run: |
          ./gradlew signingReport &&
          ./gradlew :app:assembleRelease  --stacktrace
      - name: Cleanup signing information
        run: rm signingKey.jks
      - name: Copy release apk and mapping
        run: zip -r artifacts_${{ steps.tag_version.outputs.new_tag }}.zip app/build/outputs
      - name: Export artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts_${{ steps.tag_version.outputs.new_tag }}.zip
          path: artifacts_${{ steps.tag_version.outputs.new_tag }}.zip
      - name: Export APK
        uses: actions/upload-artifact@v1
        with:
          name: KINTAMAnga-${{ steps.tag_version.outputs.new_tag }}.apk
          path: app/build/outputs/apk/release/app-release.apk
      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          prerelease: false
      - name: Upload artifacts
        id: upload-artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts_${{ steps.tag_version.outputs.new_tag }}.zip
          asset_name: artifacts_${{ steps.tag_version.outputs.new_tag }}.zip
          asset_content_type: application/zip
      - name: Upload APK
        id: upload-apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: KINTAMAnga-${{ steps.tag_version.outputs.new_tag }}.apk
          asset_content_type: application/zip

